Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> ID ASSIGN NUMBER SEMICOLON
Rule 4     statement -> LET ID ASSIGN NUMBER SEMICOLON

Terminals, with rules where they appear

ASSIGN               : 3 4
ID                   : 3 4
LET                  : 4
NUMBER               : 3 4
SEMICOLON            : 3 4
error                : 

Nonterminals, with rules where they appear

statement            : 1 2 0
statements           : 1

Parsing method: LALR

state 0

    (0) S' -> . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . LET ID ASSIGN NUMBER SEMICOLON

    ID              shift and go to state 2
    LET             shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (3) statement -> ID . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 4


state 3

    (4) statement -> LET . ID ASSIGN NUMBER SEMICOLON

    ID              shift and go to state 5


state 4

    (3) statement -> ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 6


state 5

    (4) statement -> LET ID . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 7


state 6

    (3) statement -> ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 8


state 7

    (4) statement -> LET ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 9


state 8

    (3) statement -> ID ASSIGN NUMBER SEMICOLON .

    $end            reduce using rule 3 (statement -> ID ASSIGN NUMBER SEMICOLON .)


state 9

    (4) statement -> LET ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 10


state 10

    (4) statement -> LET ID ASSIGN NUMBER SEMICOLON .

    $end            reduce using rule 4 (statement -> LET ID ASSIGN NUMBER SEMICOLON .)

