
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementASSIGN ID LET NUMBER SEMICOLONstatements : statements statementstatements : statementstatement : ID ASSIGN NUMBER SEMICOLONstatement : LET ID ASSIGN NUMBER SEMICOLON'
    
_lr_action_items = {'ID':([0,3,],[2,5,]),'LET':([0,],[3,]),'$end':([1,8,10,],[0,-3,-4,]),'ASSIGN':([2,5,],[4,7,]),'NUMBER':([4,7,],[6,9,]),'SEMICOLON':([6,9,],[8,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',8),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',12),
  ('statement -> ID ASSIGN NUMBER SEMICOLON','statement',4,'p_statement_assign','parser.py',16),
  ('statement -> LET ID ASSIGN NUMBER SEMICOLON','statement',5,'p_statement_let_assign','parser.py',21),
]
