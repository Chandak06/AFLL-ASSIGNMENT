
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN ID LET NUMBER SEMICOLONstatements : statements statementstatements : statementstatement : ID ASSIGN NUMBER SEMICOLONstatement : LET ID ASSIGN NUMBER SEMICOLON'
    
_lr_action_items = {'ID':([0,1,2,4,5,10,12,],[3,3,-2,7,-1,-3,-4,]),'LET':([0,1,2,5,10,12,],[4,4,-2,-1,-3,-4,]),'$end':([1,2,5,10,12,],[0,-2,-1,-3,-4,]),'ASSIGN':([3,7,],[6,9,]),'NUMBER':([6,9,],[8,11,]),'SEMICOLON':([8,11,],[10,12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',8),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',12),
  ('statement -> ID ASSIGN NUMBER SEMICOLON','statement',4,'p_statement_assign','parser.py',17),
  ('statement -> LET ID ASSIGN NUMBER SEMICOLON','statement',5,'p_statement_let_assign','parser.py',23),
]
