Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> ID ASSIGN expression SEMICOLON
Rule 4     statement -> LET ID ASSIGN expression SEMICOLON
Rule 5     expression -> expression PLUS term
Rule 6     expression -> expression MINUS term
Rule 7     expression -> term
Rule 8     term -> term TIMES factor
Rule 9     term -> term DIVIDE factor
Rule 10    term -> factor
Rule 11    factor -> NUMBER
Rule 12    factor -> ID
Rule 13    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ASSIGN               : 3 4
DIVIDE               : 9
ID                   : 3 4 12
LET                  : 4
LPAREN               : 13
MINUS                : 6
NUMBER               : 11
PLUS                 : 5
RPAREN               : 13
SEMICOLON            : 3 4
TIMES                : 8
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 5 6 13
factor               : 8 9 10
statement            : 1 2 0
statements           : 1
term                 : 5 6 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . statement
    (3) statement -> . ID ASSIGN expression SEMICOLON
    (4) statement -> . LET ID ASSIGN expression SEMICOLON

    ID              shift and go to state 2
    LET             shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (3) statement -> ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 4


state 3

    (4) statement -> LET . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 5


state 4

    (3) statement -> ID ASSIGN . expression SEMICOLON
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    expression                     shift and go to state 7
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 5

    (4) statement -> LET ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 12


state 6

    (12) factor -> ID .

    TIMES           reduce using rule 12 (factor -> ID .)
    DIVIDE          reduce using rule 12 (factor -> ID .)
    SEMICOLON       reduce using rule 12 (factor -> ID .)
    PLUS            reduce using rule 12 (factor -> ID .)
    MINUS           reduce using rule 12 (factor -> ID .)
    RPAREN          reduce using rule 12 (factor -> ID .)


state 7

    (3) statement -> ID ASSIGN expression . SEMICOLON
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 8

    (7) expression -> term .
    (8) term -> term . TIMES factor
    (9) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 7 (expression -> term .)
    PLUS            reduce using rule 7 (expression -> term .)
    MINUS           reduce using rule 7 (expression -> term .)
    RPAREN          reduce using rule 7 (expression -> term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 9

    (10) term -> factor .

    TIMES           reduce using rule 10 (term -> factor .)
    DIVIDE          reduce using rule 10 (term -> factor .)
    SEMICOLON       reduce using rule 10 (term -> factor .)
    PLUS            reduce using rule 10 (term -> factor .)
    MINUS           reduce using rule 10 (term -> factor .)
    RPAREN          reduce using rule 10 (term -> factor .)


state 10

    (11) factor -> NUMBER .

    TIMES           reduce using rule 11 (factor -> NUMBER .)
    DIVIDE          reduce using rule 11 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 11 (factor -> NUMBER .)
    PLUS            reduce using rule 11 (factor -> NUMBER .)
    MINUS           reduce using rule 11 (factor -> NUMBER .)
    RPAREN          reduce using rule 11 (factor -> NUMBER .)


state 11

    (13) factor -> LPAREN . expression RPAREN
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    expression                     shift and go to state 18
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 12

    (4) statement -> LET ID ASSIGN . expression SEMICOLON
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    expression                     shift and go to state 19
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 13

    (3) statement -> ID ASSIGN expression SEMICOLON .

    $end            reduce using rule 3 (statement -> ID ASSIGN expression SEMICOLON .)


state 14

    (5) expression -> expression PLUS . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    term                           shift and go to state 20
    factor                         shift and go to state 9

state 15

    (6) expression -> expression MINUS . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    term                           shift and go to state 21
    factor                         shift and go to state 9

state 16

    (8) term -> term TIMES . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    factor                         shift and go to state 22

state 17

    (9) term -> term DIVIDE . factor
    (11) factor -> . NUMBER
    (12) factor -> . ID
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 6
    LPAREN          shift and go to state 11

    factor                         shift and go to state 23

state 18

    (13) factor -> LPAREN expression . RPAREN
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    RPAREN          shift and go to state 24
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 19

    (4) statement -> LET ID ASSIGN expression . SEMICOLON
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 25
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 20

    (5) expression -> expression PLUS term .
    (8) term -> term . TIMES factor
    (9) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 5 (expression -> expression PLUS term .)
    PLUS            reduce using rule 5 (expression -> expression PLUS term .)
    MINUS           reduce using rule 5 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 5 (expression -> expression PLUS term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 21

    (6) expression -> expression MINUS term .
    (8) term -> term . TIMES factor
    (9) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 6 (expression -> expression MINUS term .)
    PLUS            reduce using rule 6 (expression -> expression MINUS term .)
    MINUS           reduce using rule 6 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 6 (expression -> expression MINUS term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 22

    (8) term -> term TIMES factor .

    TIMES           reduce using rule 8 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 8 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 8 (term -> term TIMES factor .)
    PLUS            reduce using rule 8 (term -> term TIMES factor .)
    MINUS           reduce using rule 8 (term -> term TIMES factor .)
    RPAREN          reduce using rule 8 (term -> term TIMES factor .)


state 23

    (9) term -> term DIVIDE factor .

    TIMES           reduce using rule 9 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 9 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 9 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 9 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 9 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 9 (term -> term DIVIDE factor .)


state 24

    (13) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (factor -> LPAREN expression RPAREN .)


state 25

    (4) statement -> LET ID ASSIGN expression SEMICOLON .

    $end            reduce using rule 4 (statement -> LET ID ASSIGN expression SEMICOLON .)

