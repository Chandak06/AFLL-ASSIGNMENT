Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> ID ASSIGN NUMBER SEMICOLON
Rule 4     statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 5     statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE
Rule 6     condition -> NUMBER GT NUMBER
Rule 7     condition -> NUMBER LT NUMBER
Rule 8     condition -> NUMBER GE NUMBER
Rule 9     condition -> NUMBER LE NUMBER
Rule 10    condition -> NUMBER EQ NUMBER
Rule 11    condition -> NUMBER NE NUMBER

Terminals, with rules where they appear

ASSIGN               : 3
ELSE                 : 4
EQ                   : 10
GE                   : 8
GT                   : 6
ID                   : 3
IF                   : 4 5
LBRACE               : 4 4 5
LE                   : 9
LPAREN               : 4 5
LT                   : 7
NE                   : 11
NUMBER               : 3 6 6 7 7 8 8 9 9 10 10 11 11
RBRACE               : 4 4 5
RPAREN               : 4 5
SEMICOLON            : 3
error                : 

Nonterminals, with rules where they appear

condition            : 4 5
statement            : 1 2
statements           : 1 4 4 5 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE

    ID              shift and go to state 3
    IF              shift and go to state 4

    statements                     shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE

    ID              shift and go to state 3
    IF              shift and go to state 4

    statement                      shift and go to state 5

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> ID . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 6


state 4

    (4) statement -> IF . LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> IF . LPAREN condition RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 5

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    RBRACE          reduce using rule 1 (statements -> statements statement .)


state 6

    (3) statement -> ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 8


state 7

    (4) statement -> IF LPAREN . condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> IF LPAREN . condition RPAREN LBRACE statements RBRACE
    (6) condition -> . NUMBER GT NUMBER
    (7) condition -> . NUMBER LT NUMBER
    (8) condition -> . NUMBER GE NUMBER
    (9) condition -> . NUMBER LE NUMBER
    (10) condition -> . NUMBER EQ NUMBER
    (11) condition -> . NUMBER NE NUMBER

    NUMBER          shift and go to state 10

    condition                      shift and go to state 9

state 8

    (3) statement -> ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 11


state 9

    (4) statement -> IF LPAREN condition . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> IF LPAREN condition . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 12


state 10

    (6) condition -> NUMBER . GT NUMBER
    (7) condition -> NUMBER . LT NUMBER
    (8) condition -> NUMBER . GE NUMBER
    (9) condition -> NUMBER . LE NUMBER
    (10) condition -> NUMBER . EQ NUMBER
    (11) condition -> NUMBER . NE NUMBER

    GT              shift and go to state 13
    LT              shift and go to state 14
    GE              shift and go to state 15
    LE              shift and go to state 16
    EQ              shift and go to state 17
    NE              shift and go to state 18


state 11

    (3) statement -> ID ASSIGN NUMBER SEMICOLON .

    ID              reduce using rule 3 (statement -> ID ASSIGN NUMBER SEMICOLON .)
    IF              reduce using rule 3 (statement -> ID ASSIGN NUMBER SEMICOLON .)
    $end            reduce using rule 3 (statement -> ID ASSIGN NUMBER SEMICOLON .)
    RBRACE          reduce using rule 3 (statement -> ID ASSIGN NUMBER SEMICOLON .)


state 12

    (4) statement -> IF LPAREN condition RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> IF LPAREN condition RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 19


state 13

    (6) condition -> NUMBER GT . NUMBER

    NUMBER          shift and go to state 20


state 14

    (7) condition -> NUMBER LT . NUMBER

    NUMBER          shift and go to state 21


state 15

    (8) condition -> NUMBER GE . NUMBER

    NUMBER          shift and go to state 22


state 16

    (9) condition -> NUMBER LE . NUMBER

    NUMBER          shift and go to state 23


state 17

    (10) condition -> NUMBER EQ . NUMBER

    NUMBER          shift and go to state 24


state 18

    (11) condition -> NUMBER NE . NUMBER

    NUMBER          shift and go to state 25


state 19

    (4) statement -> IF LPAREN condition RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> IF LPAREN condition RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE

    ID              shift and go to state 3
    IF              shift and go to state 4

    statements                     shift and go to state 26
    statement                      shift and go to state 2

state 20

    (6) condition -> NUMBER GT NUMBER .

    RPAREN          reduce using rule 6 (condition -> NUMBER GT NUMBER .)


state 21

    (7) condition -> NUMBER LT NUMBER .

    RPAREN          reduce using rule 7 (condition -> NUMBER LT NUMBER .)


state 22

    (8) condition -> NUMBER GE NUMBER .

    RPAREN          reduce using rule 8 (condition -> NUMBER GE NUMBER .)


state 23

    (9) condition -> NUMBER LE NUMBER .

    RPAREN          reduce using rule 9 (condition -> NUMBER LE NUMBER .)


state 24

    (10) condition -> NUMBER EQ NUMBER .

    RPAREN          reduce using rule 10 (condition -> NUMBER EQ NUMBER .)


state 25

    (11) condition -> NUMBER NE NUMBER .

    RPAREN          reduce using rule 11 (condition -> NUMBER NE NUMBER .)


state 26

    (4) statement -> IF LPAREN condition RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> IF LPAREN condition RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 27
    ID              shift and go to state 3
    IF              shift and go to state 4

    statement                      shift and go to state 5

state 27

    (4) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE
    (5) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .

    ELSE            shift and go to state 28
    ID              reduce using rule 5 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 5 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 5 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)


state 28

    (4) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 29


state 29

    (4) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE

    ID              shift and go to state 3
    IF              shift and go to state 4

    statements                     shift and go to state 30
    statement                      shift and go to state 2

state 30

    (4) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (3) statement -> . ID ASSIGN NUMBER SEMICOLON
    (4) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 31
    ID              shift and go to state 3
    IF              shift and go to state 4

    statement                      shift and go to state 5

state 31

    (4) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 4 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 4 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 4 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 4 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

